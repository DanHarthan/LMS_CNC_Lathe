# Generated by stepconf 1.1 at Mon Sep  2 09:51:16 2019
# If you make changes to this file, they will be
# overwritten when you run stepconf again
loadrt trivkins
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES

# Parallel port setup
loadrt probe_parport
loadrt hal_parport cfg="0x378 out"
setp parport.0.reset-time 1000
addf parport.0.read base-thread
addf parport.0.write base-thread
addf parport.0.reset base-thread

setp parport.0.pin-01-out-invert 1
#net spindle-pwm => parport.0.pin-01-out
net xstep => parport.0.pin-02-out
setp parport.0.pin-02-out-reset 1
net xdir => parport.0.pin-03-out
net ystep => parport.0.pin-04-out
setp parport.0.pin-04-out-reset 1
net ydir => parport.0.pin-05-out
net zstep => parport.0.pin-06-out
setp parport.0.pin-06-out-reset 1
net zdir => parport.0.pin-07-out
net astep => parport.0.pin-08-out
setp parport.0.pin-08-out-reset 1
net adir => parport.0.pin-09-out
net xenable => parport.0.pin-14-out
setp parport.0.pin-17-out-invert 1
net spindle-ccw => parport.0.pin-17-out
net max-home-z <= parport.0.pin-12-in-not
net min-home-x <= parport.0.pin-13-in-not

# Stepgen setup
loadrt stepgen step_type=0,0
addf stepgen.make-pulses base-thread
addf stepgen.capture-position servo-thread
addf stepgen.update-freq servo-thread

# Initialize the scale (This is used to scale the encoder pulse to RPM)
loadrt scale count=3
addf scale.1 servo-thread
setp scale.1.gain 60
addf scale.2 servo-thread
setp scale.2.gain 60

# Initilize Low Pass Filter for Spindle
loadrt lowpass count=2
loadrt near count=1
addf lowpass.0 servo-thread
addf lowpass.1 servo-thread
setp lowpass.1.gain 0.01000

#Initialize near and abs for Spindle at speed
loadrt abs count=1 
addf near.0 servo-thread
addf abs.0 servo-thread

# Initialize the encoder (spindle)
loadrt encoder num_chan=1 
addf encoder.update-counters base-thread
addf encoder.capture-position servo-thread
setp encoder.0.position-scale 100 # 100 ppr 400 for quadrature
setp encoder.0.counter-mode true # True is single mode on A, false is quadrature

# Initialize the PID 
loadrt pid num_chan=1
addf pid.0.do-pid-calcs servo-thread
setp pid.0.Pgain 1.5
setp pid.0.Igain 0.4
setp pid.0.Dgain 0.0
setp pid.0.maxoutput 160  # Super important for limiting spooling and overshoot.
#net Pgainin => pid.0.Pgain  # Enable to use real time PID inputs in GUI for tuning
#net Igainin => pid.0.Igain  # Enable to use real time PID inputs in GUI for tuning
#net Dgainin => pid.0.Dgain  # Enable to use real time PID inputs in GUI for tuning
#net MAXout  => pid.0.maxoutput  # Enable to use real time PID inputs in GUI for tuning 

# Initialize the pwmgen
loadrt pwmgen output_type=0
addf pwmgen.update servo-thread
addf pwmgen.make-pulses base-thread
setp pwmgen.0.pwm-freq 100.0
setp pwmgen.0.scale 2659.57446809
setp pwmgen.0.offset 0.06
setp pwmgen.0.dither-pwm true
#setp pwmgen.0.min-dc 0.001 # min output duty cycle --> lowest possible spindle speed
#setp pwmgen.0.max-dc .8 # max output duty cycle  --> highest possible spindle speed

# Initialize the sum2
loadrt sum2 count=1
addf sum2.0 servo-thread

# Initialize the inverter for negative feedback
loadrt invert count=1
addf invert.0 servo-thread

addf motion-command-handler servo-thread
addf motion-controller servo-thread

# Spindle PID closed loop controler
net spindle-cw <= motion.spindle-forward
net spindle-phase-a encoder.0.phase-A
net spindle-index encoder.0.phase-Z
net spindle-on            motion.spindle-on      => pwmgen.0.enable => pid.0.enable
net spindle-pwm           pwmgen.0.pwm           => parport.0.pin-01-out
net spindle-index-enable  encoder.0.index-enable <=> motion.spindle-index-enable
net spindle-position      encoder.0.position     => motion.spindle-revs    
net spindle-velocity      encoder.0.velocity     => scale.2.in       
net pid_feedback          pid.0.feedback         <= motion.spindle-speed-in <= scale.2.out
net pid_command           pid.0.command          <= motion.spindle-speed-out => sum2.0.in1
net pid_error             pid.0.error            
net pid_output            pid.0.output           => lowpass.1.in 
net pid_filter_out	  lowpass.1.out          => sum2.0.in0
net pwmgen_value          pwmgen.0.value         <= sum2.0.out

# connect the HAL encoder inputs to the real encoder.
net spindle-phase-a encoder.0.phase-A <= parport.0.pin-10-in
net spindle-phase-b encoder.0.phase-B <= parport.0.pin-15-in
net spindle-index encoder.0.phase-Z <= parport.0.pin-11-in

# connect the HAL encoder outputs to LinuxCNC.
net spindle-position encoder.0.position => motion.spindle-revs
net spindle-index-enable encoder.0.index-enable <=> motion.spindle-index-enable

setp stepgen.0.position-scale [AXIS_0]SCALE
setp stepgen.0.steplen 1
setp stepgen.0.stepspace 0
setp stepgen.0.dirhold 25000
setp stepgen.0.dirsetup 25000
setp stepgen.0.maxaccel [AXIS_0]STEPGEN_MAXACCEL
net xpos-cmd axis.0.motor-pos-cmd => stepgen.0.position-cmd
net xpos-fb stepgen.0.position-fb => axis.0.motor-pos-fb
net xstep <= stepgen.0.step
net xdir <= stepgen.0.dir
net xenable axis.0.amp-enable-out => stepgen.0.enable
net min-home-x => axis.0.home-sw-in
net min-home-x => axis.0.pos-lim-sw-in

setp stepgen.1.position-scale [AXIS_2]SCALE
setp stepgen.1.steplen 1
setp stepgen.1.stepspace 0
setp stepgen.1.dirhold 25000
setp stepgen.1.dirsetup 25000
setp stepgen.1.maxaccel [AXIS_2]STEPGEN_MAXACCEL
net zpos-cmd axis.2.motor-pos-cmd => stepgen.1.position-cmd
net zpos-fb stepgen.1.position-fb => axis.2.motor-pos-fb
net zstep <= stepgen.1.step
net zdir <= stepgen.1.dir
net zenable axis.2.amp-enable-out => stepgen.1.enable
net max-home-z => axis.2.home-sw-in
net max-home-z => axis.2.neg-lim-sw-in

net estop-out <= iocontrol.0.user-enable-out
net estop-out => iocontrol.0.emc-enable-in

loadusr -W hal_manualtoolchange
net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
